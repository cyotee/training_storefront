CREATE SCHEMA IF NOT EXISTS TRAINING_STOREFRONT;

CREATE TABLE IF NOT EXISTS TRAINING_STOREFRONT.VENDORS (
   VENDOR_KEY INTEGER PRIMARY KEY NOT NULL
  ,VENDOR_NAME VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS TRAINING_STOREFRONT.SKUS (
   SKU_KEY INTEGER PRIMARY KEY NOT NULL
  ,VENDOR_KEY INTEGER NOT NULL REFERENCES TRAINING_STOREFRONT.VENDORS(VENDOR_KEY)
  ,VENDOR_SKU_CODE VARCHAR(255) NOT NULL
  ,SKU_NAME VARCHAR(255) NOT NULL
  ,SKU_DESCRIPTION VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS TRAINING_STOREFRONT.ADDRESSES (
  ADDRESS_KEY INTEGER PRIMARY KEY NOT NULL
  ,ADDRESS_LINE_1 VARCHAR(255) NOT NULL
  ,ADDRESS_LINE_2 VARCHAR(255)
  ,CITY VARCHAR(255) NOT NULL
  ,COUNTRY_SUBDIVISION VARCHAR(255)
  ,POSTAL_CODE VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS TRAINING_STOREFRONT.INSTRUCTORS (
  INSTRUCTOR_KEY INTEGER PRIMARY KEY NOT NULL
  ,INSTRUCTOR_NAME VARCHAR(255)
  ,INSTRUCTOR_EMAIL VARCHAR(255)
);

CREATE OR REPLACE FUNCTION updateTimeZones()
RETURNS TRIGGER AS $func$
  BEGIN
    NEW.CLASS_SESSION_START_TIMEZONE = NEW.CLASS_SESSION_TIMEZONE;
    NEW.CLASS_SESSION_END_TIMEZONE = NEW.CLASS_SESSION_TIMEZONE;
    RETURN NEW;
  END;
$func$ LANGUAGE plpgsql;

CREATE TABLE IF NOT EXISTS TRAINING_STOREFRONT.CLASS_SESSIONS (
  CLASS_SESSION_KEY INTEGER PRIMARY KEY NOT NULL
  ,SKU_KEY INTEGER NOT NULL REFERENCES TRAINING_STOREFRONT.SKUS(SKU_KEY)
  ,ADDRESS_KEY INTEGER NOT NULL REFERENCES TRAINING_STOREFRONT.ADDRESSES(ADDRESS_KEY)
  ,INSTRUCTOR_KEY INTEGER NOT NULL REFERENCES TRAINING_STOREFRONT.INSTRUCTORS(INSTRUCTOR_KEY)
  ,CLASS_SESSION_STARTTIME TIMESTAMP WITH TIME ZONE NOT NULL
  ,CLASS_SESSION_ENDTIME TIMESTAMP WITH TIME ZONE NOT NULL
  ,CLASS_SESSION_START_TIMEZONE VARCHAR(255) NOT NULL
  ,CLASS_SESSION_END_TIMEZONE VARCHAR(255) NOT NULL
  ,CLASS_SESSION_TIMEZONE VARCHAR(255) NOT NULL
);

CREATE TRIGGER setTimezones
  BEFORE INSERT OR UPDATE ON TRAINING_STOREFRONT.CLASS_SESSIONS
    FOR EACH ROW
      WHEN (NEW.CLASS_SESSION_TIMEZONE IS NOT NULL AND (NEW.CLASS_SESSION_START_TIMEZONE IS NULL AND NEW.CLASS_SESSION_END_TIMEZONE IS NULL))
        EXECUTE PROCEDURE updateTimeZones();